#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –Ω–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π CryBot
"""
import sys
import os

# –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ–∫—É—â—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –≤ –ø—É—Ç—å
sys.path.insert(0, os.path.dirname(os.path.abspath(__file__)))

def test_games():
    """–¢–µ—Å—Ç –∏–≥—Ä–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π"""
    print("üéÆ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏–≥—Ä–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π...")
    
    try:
        from games_extended import conductor_game, hangman_manager, poker_manager
        
        # –¢–µ—Å—Ç –ü—Ä–æ–≤–æ–¥–Ω–∏—Ü–∞ –†–ñ–î
        print("  üöÇ –ü—Ä–æ–≤–æ–¥–Ω–∏—Ü–∞ –†–ñ–î...")
        result = conductor_game.start_session(12345, 67890)
        print(f"    ‚úÖ {result[:50]}...")
        
        # –¢–µ—Å—Ç –í–∏—Å–µ–ª–∏—Ü–∞
        print("  üéØ –í–∏—Å–µ–ª–∏—Ü–∞...")
        result = hangman_manager.start_game(12345)
        print(f"    ‚úÖ {result[:50]}...")
        
        # –¢–µ—Å—Ç –ü–æ–∫–µ—Ä
        print("  üÉè –ü–æ–∫–µ—Ä...")
        result = poker_manager.create_game(12345, 67890, "–¢–µ—Å—Ç–æ–≤—ã–π –∏–≥—Ä–æ–∫")
        print(f"    ‚úÖ {result[:50]}...")
        
        print("  üéâ –í—Å–µ –∏–≥—Ä—ã —Ä–∞–±–æ—Ç–∞—é—Ç!")
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –≤ –∏–≥—Ä–∞—Ö: {e}")
        return False

def test_economy():
    """–¢–µ—Å—Ç —ç–∫–æ–Ω–æ–º–∏—á–µ—Å–∫–æ–≥–æ –º–æ–¥—É–ª—è"""
    print("üí∞ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —ç–∫–æ–Ω–æ–º–∏–∫–∏...")
    
    try:
        from economy_social import economy_manager, Currency
        
        # –¢–µ—Å—Ç –∫–æ—à–µ–ª—å–∫–∞
        print("  üí≥ –ö–æ—à–µ–ª—ë–∫...")
        wallet = economy_manager.get_wallet(12345)
        print(f"    ‚úÖ –ë–∞–ª–∞–Ω—Å: {wallet.balance.get(Currency.CRYCOIN, 0)} ü™ô")
        
        # –¢–µ—Å—Ç –µ–∂–µ–¥–Ω–µ–≤–Ω–æ–≥–æ –±–æ–Ω—É—Å–∞
        print("  üéÅ –ï–∂–µ–¥–Ω–µ–≤–Ω—ã–π –±–æ–Ω—É—Å...")
        result = economy_manager.daily_bonus(12345)
        print(f"    ‚úÖ {result[:50]}...")
        
        # –¢–µ—Å—Ç –º–∞–≥–∞–∑–∏–Ω–∞
        print("  üõí –ú–∞–≥–∞–∑–∏–Ω...")
        result = economy_manager.get_shop()
        print(f"    ‚úÖ {result[:50]}...")
        
        print("  üéâ –≠–∫–æ–Ω–æ–º–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç!")
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –≤ —ç–∫–æ–Ω–æ–º–∏–∫–µ: {e}")
        return False

def test_social():
    """–¢–µ—Å—Ç —Å–æ—Ü–∏–∞–ª—å–Ω–æ–≥–æ –º–æ–¥—É–ª—è"""
    print("üë• –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π...")
    
    try:
        from economy_social import social_manager
        
        # –¢–µ—Å—Ç –ø—Ä–æ—Ñ–∏–ª—è
        print("  üë§ –ü—Ä–æ—Ñ–∏–ª—å...")
        profile = social_manager.get_profile(12345)
        print(f"    ‚úÖ –ü—Ä–æ—Ñ–∏–ª—å: {profile.name}")
        
        # –¢–µ—Å—Ç –∫–ª–∞–Ω–∞
        print("  üè∞ –ö–ª–∞–Ω...")
        result = social_manager.create_clan(12345, "–¢–µ—Å—Ç–æ–≤—ã–π –∫–ª–∞–Ω", "–û–ø–∏—Å–∞–Ω–∏–µ")
        print(f"    ‚úÖ {result[:50]}...")
        
        print("  üéâ –°–æ—Ü–∏–∞–ª—å–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏ —Ä–∞–±–æ—Ç–∞—é—Ç!")
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –≤ —Å–æ—Ü–∏–∞–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏—è—Ö: {e}")
        return False

def test_cache_monitoring():
    """–¢–µ—Å—Ç –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞"""
    print("‚ö° –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏—è –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞...")
    
    try:
        from cache_monitoring import cache_manager, monitoring_manager, logger
        
        # –¢–µ—Å—Ç –∫–µ—à–∞
        print("  üíæ –ö–µ—à...")
        cache_manager.set("test_key", "test_value", ttl=60)
        value = cache_manager.get("test_key")
        print(f"    ‚úÖ –ö–µ—à —Ä–∞–±–æ—Ç–∞–µ—Ç: {value}")
        
        # –¢–µ—Å—Ç –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞
        print("  üìä –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥...")
        monitoring_manager.increment_counter("test_counter")
        monitoring_manager.set_gauge("test_gauge", 42.0)
        print(f"    ‚úÖ –ú–µ—Ç—Ä–∏–∫–∏ —Ä–∞–±–æ—Ç–∞—é—Ç")
        
        # –¢–µ—Å—Ç –ª–æ–≥–≥–µ—Ä–∞
        print("  üîç –õ–æ–≥–≥–µ—Ä...")
        logger.info("–¢–µ—Å—Ç–æ–≤–æ–µ —Å–æ–æ–±—â–µ–Ω–∏–µ")
        print(f"    ‚úÖ –õ–æ–≥–≥–µ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
        
        print("  üéâ –ö–µ—à–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Ä–∞–±–æ—Ç–∞—é—Ç!")
        return True
        
    except Exception as e:
        print(f"  ‚ùå –û—à–∏–±–∫–∞ –≤ –∫–µ—à–∏—Ä–æ–≤–∞–Ω–∏–∏/–º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–µ: {e}")
        return False

def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –Ω–æ–≤—ã—Ö –º–æ–¥—É–ª–µ–π CryBot\n")
    
    tests = [
        test_games,
        test_economy,
        test_social,
        test_cache_monitoring
    ]
    
    results = []
    for test in tests:
        try:
            result = test()
            results.append(result)
        except Exception as e:
            print(f"‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ {test.__name__}: {e}")
            results.append(False)
        print()
    
    # –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á—ë—Ç
    passed = sum(results)
    total = len(results)
    
    print("üìä –ò—Ç–æ–≥–æ–≤—ã–π –æ—Ç—á—ë—Ç:")
    print(f"‚úÖ –ü—Ä–æ–π–¥–µ–Ω–æ: {passed}/{total}")
    print(f"‚ùå –ü—Ä–æ–≤–∞–ª–µ–Ω–æ: {total - passed}/{total}")
    
    if passed == total:
        print("üéâ –í—Å–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–π–¥–µ–Ω—ã —É—Å–ø–µ—à–Ω–æ!")
        return 0
    else:
        print("‚ö†Ô∏è –ù–µ–∫–æ—Ç–æ—Ä—ã–µ —Ç–µ—Å—Ç—ã –ø—Ä–æ–≤–∞–ª–µ–Ω—ã")
        return 1

if __name__ == "__main__":
    sys.exit(main())