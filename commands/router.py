# Obsolete compatibility entry-point for older bot_vk.py

from typing import Optional, Tuple
from version import get_version
from storage import get_storage_from_env

# –°–æ—Å—Ç–æ—è–Ω–∏–µ –æ–∂–∏–¥–∞–Ω–∏—è –∏–º–µ–Ω–∏ –≤ –ø–∞–º—è—Ç–∏ –ø—Ä–æ—Ü–µ—Å—Å–∞
_awaiting_name = set()


def _get_profile(storage, user_id: int) -> dict:
    prof = storage.get("profiles", str(user_id)) or {}
    if "created_at" not in prof:
        import time as _t
        prof["created_at"] = _t.time()
    return prof


def _save_profile(storage, user_id: int, prof: dict) -> None:
    storage.set("profiles", str(user_id), prof)


def _inline_keyboard(vk, peer_id: int, rows: list[list[str]]) -> None:
    from vk_api.keyboard import VkKeyboard, VkKeyboardColor
    kb = VkKeyboard(inline=True)
    first = True
    for row in rows:
        if not first:
            kb.add_line()
        first = False
        for label in row:
            kb.add_button(label, color=VkKeyboardColor.PRIMARY)
    vk.messages.send(peer_id=peer_id, message=" ", random_id=0, keyboard=kb.get_keyboard())


def configure_router() -> None:
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Ä–µ–µ—Å—Ç—Ä –∫–æ–º–∞–Ω–¥. –°–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç—å —Å–æ —Å—Ç–∞—Ä—ã–º bot_vk.py."""
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —É–∂–µ –ø—Ä–æ–∏—Å—Ö–æ–¥–∏—Ç –ø—Ä–∏ –∏–º–ø–æ—Ä—Ç–µ –≤ –∫–æ–Ω—Ü–µ —Ñ–∞–π–ª–∞ –≤—ã–∑–æ–≤–æ–º
    # _register_builtin_commands(). –û—Å—Ç–∞–≤–ª—è–µ–º —Ñ—É–Ω–∫—Ü–∏—é-–ø—É—Å—Ç—ã—à–∫—É –¥–ª—è —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏.
    return None


def dispatch_command(
    text: str,
    vk: object,
    peer_id: int,
    user_id: int,
    is_dm: bool,
) -> Tuple[bool, Optional[str]]:
    if not text:
        return False, None

    storage = get_storage_from_env()
    lower = text.strip().lower()

    # –õ–æ–≤—É—à–∫–∞ –≤–≤–æ–¥–∞ –∏–º–µ–Ω–∏
    if user_id in _awaiting_name and lower not in {"/start", "/games", "/help"}:
        name = text.strip()
        prof = _get_profile(storage, user_id)
        prof["name"] = name
        prof["privacy_accept"] = True
        _save_profile(storage, user_id, prof)
        _awaiting_name.discard(user_id)
        return True, f"‚úÖ –°–ø–∞—Å–∏–±–æ, {name}! –î–æ—Å—Ç—É–ø –∫ –∏–≥—Ä–∞–º –æ—Ç–∫—Ä—ã—Ç. –û—Ç–∫—Ä–æ–π—Ç–µ üéÆ –ò–≥—Ä—ã."

    # –ù–µ –ø–µ—Ä–µ—Ö–≤–∞—Ç—ã–≤–∞–µ–º /start ‚Äî –ø—É—Å—Ç—å –æ—Å–Ω–æ–≤–Ω–æ–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤ bot_vk.py
    # —É—Å—Ç–∞–Ω–æ–≤–∏—Ç –æ–±—ã—á–Ω—É—é (–Ω–µ inline) –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É.

    if lower in {"/games", "üéÆ –∏–≥—Ä—ã"}:
        prof = _get_profile(storage, user_id)
        if not prof.get("privacy_accept") or not prof.get("name"):
            # –ø–æ–∫–∞–∑–∞—Ç—å —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—é
            msg = (
                "üìù –†–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è\n\n–î–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∏–≥—Ä–∞–º –ø—Ä–∏–º–∏—Ç–µ –ø–æ–ª–∏—Ç–∏–∫—É –∏ –≤–≤–µ–¥–∏—Ç–µ –∏–º—è."
            )
            from vk_api.keyboard import VkKeyboard, VkKeyboardColor
            kb = VkKeyboard(inline=True)
            kb.add_button("‚úÖ –ü—Ä–∏–Ω—è—Ç—å –ø–æ–ª–∏—Ç–∏–∫—É", color=VkKeyboardColor.PRIMARY)
            kb.add_line()
            kb.add_button("üìÑ –ü–æ–ª–∏—Ç–∏–∫–∞", color=VkKeyboardColor.SECONDARY)
            vk.messages.send(peer_id=peer_id, message=msg, random_id=0, keyboard=kb.get_keyboard())
            return True, None
        # –º–µ–Ω—é –∏–≥—Ä
        return True, "üéÆ –ò–≥—Ä—ã: üöÇ –ü—Ä–æ–≤–æ–¥–Ω–∏—Ü–∞, üéØ –í–∏—Å–µ–ª–∏—Ü–∞, üÉè –ü–æ–∫–µ—Ä (–∫–Ω–æ–ø–∫–∏ –¥–∞–ª–µ–µ)."

    if lower in {"‚úÖ –ø—Ä–∏–Ω—è—Ç—å –ø–æ–ª–∏—Ç–∏–∫—É", "accept_privacy"}:
        prof = _get_profile(storage, user_id)
        prof["privacy_accept"] = True
        _save_profile(storage, user_id, prof)
        _awaiting_name.add(user_id)
        return True, "‚úçÔ∏è –í–≤–µ–¥–∏—Ç–µ –∏–º—è (–æ–¥–Ω–æ–π —Å—Ç—Ä–æ–∫–æ–π):"

    if lower in {"üìÑ –ø–æ–ª–∏—Ç–∏–∫–∞", "show_privacy"}:
        return True, "–ü–æ–ª–∏—Ç–∏–∫–∞: —Å–º. —Ñ–∞–π–ª PRIVACY_POLICY.md –∏–ª–∏ /privacy"

    if lower in {"/help", "help", "–ø–æ–º–æ—â—å"}:
        return True, "–î–æ—Å—Ç—É–ø–Ω–æ: /start, /games. –î–ª—è –Ω–∞—á–∞–ª–∞ ‚Äî /start."

    return False, None